package com.kbstar.mbc.fc.foundation.bzcrudbus.dao;



import java.sql.SQLException;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import com.kbstar.mbc.fc.foundation.bzcrudbus.log.IIfrsLogger;
import com.kbstar.mbc.fc.foundation.bzcrudbus.log.IfrsLogHelper;

/**
 * 
 *
 * @author   
 * @version 1.0
 * @see
 */
public class CommonDAO {
    
	private static CommonDAO instance;
    
    private IIfrsLogger logger = IfrsLogHelper.getWaf();
    
    public static synchronized CommonDAO getInstance() {
		if (instance == null) {
			instance = new CommonDAO();
		}
		return instance;
	}
    
    public CommonDAO() {
        
    }

    /**
     * 조회결과를 Map으로 가지고 온다. statementName은 iBATIS XML에 정의되어 있어야 한다.
     * @param statementId
     * @param map
     * @return Map
     */
    public Map read(String statementId, Map map) throws Exception {
        try {
            return (Map)DBConnManager.getSqlMap().queryForObject(statementId, map);
        } catch (SQLException se) {
        	throw (Exception) se;
        }
    }

    /**
     * 조회결과를 Map으로 가지고 온다. statementName은 iBATIS XML에 정의되어 있어야 한다.
     * @param statementId
     * @param map
     * @return Map
     */
    public String readData(String statementId, Map map) throws Exception {
        try {
            return (String)DBConnManager.getSqlMap().queryForObject(statementId, map);
        } catch (SQLException se) {
        	throw (Exception) se;
        }
    }

    
    /**
     * 조회결과를 List로 가지고 온다. statementName은 iBATIS XML에 정의되어 있어야 한다.
     */
    public List readList(String statementId, Map map) throws Exception {
                
        List result = null;
                
        try {
            result = (List)DBConnManager.getSqlMap().queryForList(statementId, map);
        } catch (SQLException se) {
        	throw (Exception) se;
        }
        
        return result;
    }

    /**
     * 조회결과를 List로 가지고 온다. statementName은 iBATIS XML에 정의되어 있어야 한다.
     */
    public int save(String statementId, Map map) throws Exception {
       
        int result = 0;
        try {
            result = (int)DBConnManager.getSqlMap().update(statementId, map);
        } catch (SQLException se) {
        	throw (Exception) se;
        }
        
        return result;
    }    
    
    /**
     * procedure를 호출한다.
     */
    
    public Map callProcedure(String statementId, Map map) throws Exception {
      
        try {
            return (Map)DBConnManager.getSqlMap().queryForObject(statementId, map);
        } catch (SQLException se) {
        	throw (Exception) se;
        }
    }    
    
}

