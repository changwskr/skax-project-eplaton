package com.kbstar.mbc.fc.foundation.bzcrudbus.foundation.base;

import java.io.*;
import org.jdom.*;
import org.jdom.input.*;
import org.jdom.output.*;

/**
 * XML 포멧의 파일을 JDOM API의 SAXBuilder를 이용해 읽어서 Document Object로 반환한다.
 * @author 
 * @version 1.0
 */

public class SAXXMLHandler extends XMLHandler
{

  /**
   * <p>SAXXMLHandler에 대한 옵션을 설정한다.</p>
   *
   * @param option  옵션정보를 담고 있는 HandlerOption Object
   */
  public SAXXMLHandler(HandlerOption option)
  {
    super(option);
  }

  /**
   * <p>JDOM API의 SAXBuilder 객체를 생성해서 반환한다.</p>
   *
   * @return Object  SAXBuilder 객체
   */
  protected Object createBuilder()
  {
    System.out.println("validate " + option.getValidate());
    SAXBuilder builder = new SAXBuilder(option.getParserName(), option.getValidate());
    return builder;
  }

  /**
   * <p>XML 파일을 JDOM API의 Document Object 변환해서 반환한다.</p>
   *
   * @param  xmlFile   Document객체로 변환하고자 하는 File Object
   * @return Document  변환된 Document 객체
   */
  public Document parse(File xmlFile)
  {
    Document doc = null;
    try
    {
      doc = ((SAXBuilder)createBuilder()).build(xmlFile);
    }
    catch(JDOMException e)
    {
      e.printStackTrace();
    }
    return doc;
  }

  /**
   * <p>XML 파일을 JDOM API의 Document Object 변환해서 반환한다.</p>
   *
   * @param  xmlFileName   Document객체로 변환하고자 하는 File name (path 포함)
   * @return Document  변환된 Document 객체
   */
  public Document parse(String xmlFileName)
  {
    Document doc = null;
    try
    {
      doc = ((SAXBuilder)createBuilder()).build(xmlFileName);
    }
    catch(JDOMException e)
    {
      e.printStackTrace();
    }
    return doc;
  }
}