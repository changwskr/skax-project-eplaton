package com.kbstar.mbc.fc.foundation.bzcrudbus.foundation.base;

import java.io.*;
import org.jdom.*;
import org.jdom.input.*;
import org.jdom.output.*;

/**
 * JDOM API의 DOMBuilder를 이용해서 DOM 형식의 Document Object를 반환한다.
 * @author 
 * @version 1.0
 */

public class DOMXMLHandler extends XMLHandler
{

	/**
	 * <p>DOMXMLHandler에 대한 옵션을 설정한다.</p>
     *
     * @param option  옵션정보를 담고 있는 HandlerOption Object
	 */
    public DOMXMLHandler(HandlerOption option)
    {
        super(option);
    }

	/**
	 * <p>지원하지 않는 Method</p>
     * <p>무조건 null 이 return 됨</p>
     *
     * @param xmlFile
     * @return Document
	 */
    public Document parse(File xmlFile)
    {
        return null;
    }

	/**
	 * <p>지원하지 않는 Method</p>
     * <p>무조건 null 이 return 됨</p>
     *
     * @param xmlFileName
     * @return Document
	 */
    public Document parse(String xmlFileName)
    {
        return null;
    }

	/**
	 * <p>XML 파일을 JDOM API의 Document Object 변환해서 반환한다.</p>
     *
     * @param  document  DOM Document객체로 변환하고자 하는 Document Object
     * @return Document  변환된 Document 객체
	 */
    public Document parse(org.w3c.dom.Document document)
    {
		Document doc = ((DOMBuilder)createBuilder()).build(document);
		return doc;
    }

	/**
	 * <p>JDOM API의 DOMBuilder 객체를 생성해서 반환한다.</p>
     *
     * @return Object  DOMBuilder 객체
	 */
    protected Object createBuilder()
    {
        DOMBuilder builder = new DOMBuilder(option.getParserName(), option.getValidate());
        return builder;
    }
}