package com.kbstar.mbc.fc.foundation.bzcrudbus.config;


/*
 * 작성된 날짜: 2008-07-22
 *
 * ActionConfig 데이터를 생성하고 관리한다.
 */

import java.io.InputStream;
import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.Iterator;

import org.jdom.Document;
import org.jdom.Element;
import org.jdom.input.SAXBuilder;

/**
 * @author ywahn
 *
 * ClassPath 정의 Class
 */
public class LoaderConfig {
	
	private static final String[] CONFIG_FILE = {};
		
	private HashMap classpathMap = null;
	
	private static LoaderConfig loaderConfig = null;

	
	private static HashMap<String, LoaderConfig> configMap = new HashMap<String, LoaderConfig>();
	
	private LoaderConfig (String[] configFile){
		
		try{
			classpathMap = new HashMap();
						
			for( int a=0; a<configFile.length; a++ ){
				
				InputStream inputStream = ParameterInfo.class.getResourceAsStream(configFile[a]);
		    	SAXBuilder builder = new SAXBuilder();
				Document doc = builder.build(inputStream);
				
				Collection col = doc.getRootElement().getChildren("class-path");
				Iterator i = col.iterator();
				while(i.hasNext()) {
		        	Element pathEle = (Element)i.next();
		        	String name = pathEle.getAttributeValue("name");
		        			        	
		        	Collection col2 = pathEle.getChildren("source");
		        	Iterator j = col2.iterator();
		        	ArrayList locationList = new ArrayList();
		        	
		        	while(j.hasNext())  {
			        	Element svcEle = (Element)j.next();
			        	String location = svcEle.getAttributeValue("location");
			        	
			        	locationList.add(location);
			        }
		        	
		        	if(classpathMap.containsKey(name)){
		        	    System.out.println("***********************************************************");
		        	    System.out.println("** Exist Name --   File Name :"+CONFIG_FILE[a]+",    Name : "+name);
		        	    System.out.println("***********************************************************");
		        	}
		        	classpathMap.put(name, locationList);
		        }
			}
    	}catch( Exception e ){
    		e.printStackTrace();
    	}
	}
	
	public static LoaderConfig getInstance(String bizCd){
		String bizCode = bizCd.toUpperCase();
		
		if(!configMap.containsKey(bizCode)){
			String[] configFile = new String[1];
			configFile[0] = IFRSConfig.getInstance().getInfo("ConfigFile", bizCode);
			configMap.put(bizCode, new LoaderConfig(configFile));
		}
		
		return (LoaderConfig) configMap.get(bizCode);
	}
	
	public static LoaderConfig getInstance() {
		
		String bizCode = "LDR";
		
		if(!configMap.containsKey(bizCode)){
			String[] configFile = new String[1];
			configFile[0] = IFRSConfig.getInstance().getInfo("ConfigFile", bizCode);
			configMap.put(bizCode, new LoaderConfig(configFile));
		}
		
		return (LoaderConfig) configMap.get(bizCode);
	}
	
	
	/**
	 * ClassPath List Return
	 * @param id
	 * @return
	 */
	public ArrayList getClassPathList(String name){
		return (ArrayList)classpathMap.get(name);
	}

	public boolean isEmpty(){
		return classpathMap.isEmpty();
	}

}
