/*
 * (@)# PCAccount.java
 *
 * Copyright KB Kookmin Bank Inc. All rights reserved.
 * PROPRIETARY/CONFIDENTIAL. Use is subject to license terms.
 */

package com.kbstar.mbc.pc.accountpc;

import java.util.List;

import com.kbstar.mbc.dc.accountdc.DCAccount;
import com.kbstar.mbc.dc.accountdc.dto.AccountDDTO;
import com.kbstar.mbc.pc.dto.AccountPDTO;
import com.kbstar.ksa.exception.BusinessException;
import com.kbstar.ksa.logger.IKesaLogger;
import com.kbstar.ksa.logger.KesaLogHelper;
import com.kbstar.ksa.oltp.biz.IProcessComponent;
import com.kbstar.ksa.util.ObjectUtil;

/**
 * <br> [프로그램명] PC계좌
 * <br> [요약] 계좌관련 처리하는 프로세스 컴포넌트
 * <br> [상세설명] 
 * <br> [변경이력]
 * <ul>
 *   <li>2008-08-26::홍길동::신규작성
 * </ul>
 */
public class PCAccount implements IProcessComponent{

	IKesaLogger logger = KesaLogHelper.getBiz();

	/**
	 * <br> [오퍼레이션명] 계좌조회
	 * <br> [요약] 
	 * <br> [상세내용] 
	 * @param AccountPDTO
	 * <ul>
	 * <li> accountNumber //계좌번호
	 * </ul>
	 * @return AccountPDTO
	 * <ul>
	 * <li> accountNumber //계좌번호
	 * <li> name //이름
	 * <li> identificationNumber //주민번호
	 * <li> interestRate //이자율
	 * <li> lastTransaction //최종거래일
	 * <li> password //패스워드
	 * <li> netAmount //금액
	 * </ul>
	 */
	public AccountPDTO getAccount(AccountPDTO accountPDTO) throws BusinessException {
		AccountDDTO accountDDTO = new DCAccount().
				getAccount(ObjectUtil.copyForClass(AccountDDTO.class, accountPDTO));
		return ObjectUtil.copyForClass(AccountPDTO.class, accountDDTO);
		
//		// 1.AccountDDTO 생성
//		AccountDDTO accountDDTO = new AccountDDTO();
//		// 2.AccountPDTO -> AccountDDTO 로 필요한 부분 복사
//		accountDDTO.setAccountNumber(accountPDTO.getAccountNumber());
//		// 3.DC호출
//		accountDDTO = new DCAccount().getAccount(accountDDTO);
//		// 4.AccountPDTO 생성
//		AccountPDTO resAccountPDTO = new AccountPDTO();
//		// 5.AccountDDTO -> AccountPDTO 로 필요한 부분 복사
//		resAccountPDTO.setAccountNumber(accountDDTO.getAccountNumber());
//		resAccountPDTO.setName(accountDDTO.getName());
//		resAccountPDTO.setIdentificationNumber(accountDDTO.getIdentificationNumber());
//		return resAccountPDTO;
	}
	
	/**
	 * <br> [오퍼레이션명] 계좌변경
	 * <br> [요약] 
	 * <br> [상세내용] 
	 * @param AccountPDTO
	 * <ul>
	 * <li> accountNumber //계좌번호
	 * <li> name //이름
	 * <li> identificationNumber //주민번호
	 * <li> interestRate //이자율
	 * <li> lastTransaction //최종거래일
	 * <li> password //패스워드
	 * <li> netAmount //금액
	 * </ul>
	 * @return void
	 */
	public void updateAccount(AccountPDTO accountPDTO) throws BusinessException {
		new DCAccount().updateAccount(ObjectUtil.copyForClass(AccountDDTO.class, accountPDTO));
	}

	
	/**
	 * <br> [오퍼레이션명] 계좌삭제
	 * <br> [요약] 
	 * <br> [상세내용] 
	 * @param AccountPDTO
	 * <ul>
	 * <li> accountNumber //계좌번호
	 * </ul>
	 * @return void
	 */
	public void deleteAccount(AccountPDTO accountPDTO) throws BusinessException {
		new DCAccount().deleteAccount(ObjectUtil.copyForClass(AccountDDTO.class,accountPDTO));
	}
	
	/**
	 * <br> [오퍼레이션명] 계좌생성
	 * <br> [요약] 
	 * <br> [상세내용] 
	 * @param AccountPDTO
	 * <ul>
	 * <li> accountNumber //계좌번호
	 * <li> name //이름
	 * <li> identificationNumber //주민번호
	 * <li> interestRate //이자율
	 * <li> lastTransaction //최종거래일
	 * <li> password //패스워드
	 * <li> netAmount //금액
	 * </ul>
	 * @return void
	 */
	public void createAccount(AccountPDTO accountPDTO) throws BusinessException {
		new DCAccount().createAccount(ObjectUtil.copyForClass(AccountDDTO.class,accountPDTO));
	}
	
	/**
	 * <br> [오퍼레이션명] 계좌리스트조회
	 * <br> [요약] 
	 * <br> [상세내용] 
	 * @param AccountPDTO
	 * <ul>
	 * <li> accountNumber //계좌번호
	 * </ul>
	 * @return List <AccountPDTO>
	 * <ul>
	 * <li> accountNumber //계좌번호
	 * <li> name //이름
	 * <li> identificationNumber //주민번호
	 * <li> interestRate //이자율
	 * <li> lastTransaction //최종거래일
	 * <li> password //패스워드
	 * <li> netAmount //금액
	 * </ul>
	 */
	
	public List<AccountPDTO> getListAccount(AccountPDTO accountPDTO) throws BusinessException{
		List<AccountDDTO> dDtoList = new DCAccount().getListAccount(ObjectUtil.copyForClass(AccountDDTO.class,accountPDTO));
		
		return ObjectUtil.copyForList(AccountPDTO.class, dDtoList);
	}
}
